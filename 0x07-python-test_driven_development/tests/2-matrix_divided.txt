# 2-matrix_divided.txt
This doctest checks a function that divides all elemets of a matrix

Import module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Correct output for positive numbers
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

It doesn't change the original matrix
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3) ; matrix
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
[[1, 2, 3], [4, 5, 6]]

The matrix must be a list of lists with ints or floats else, raises a TypeError
>>> matrix = "not a list"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Empty list raises a TypeError
>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

An empty list of lists will run with no error
>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
[[]]

A TypeError is raised if matrix is not exactly a list of lists
>>> matrix = [1, 2, 3]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

TypeError is raised if any of matrix elements are not ints or floats types.
>>> matrix = [
... [1, 2, 3],
... [4, "not a number", 6]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

All rows must be of same size in a matrix, else TypeError is raised
>>> matrix = [
... [1, 2, 3, 4],
... [5, 6, 7]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

Parameter div must be an int or float else, a TypeError is raised
>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, "not a number"))
Traceback (most recent call last):
TypeError: div must be a number

If parameter div is none a TypeError is raised
>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
TypeError: div must be a number

Parameter div must not be a zero  else, a ZeroDivisionError is raised
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero
